services:
  - docker:dind

stages:
  - image
  - build
  - release

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

docker-image:
  stage: image
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

.build: &build
  stage: build
  script:
    - bash .ci/bind-cache.sh
    - export TERM=xterm-256color
    - export DISABLE_PROGRESS=1
    - 'sed -r "s|android.arch = .*|android.arch = $TARGET_ARCH|g" -i buildozer.spec'
    - 'echo -e "EXEC=docker\nDOCKER_IMAGE=$IMAGE_TAG\nDISABLE_PROGRESS=1" > .env'
    - docker pull $IMAGE_TAG
    - bash ./tool.sh prebuild
    - script -q -e -c "make _ci"
    - ls bin | grep debug | grep .apk # ensure job generated debug apk
    - ls bin | grep release | grep .apk # ensure job generated release apk
    - mkdir ci-out && mv bin ci-out/$CI_JOB_NAME && mv buildozer.spec ci-out/$CI_JOB_NAME/
  artifacts:
    paths:
    - ci-out/

armeabi-v7a:
  <<: *build
  variables:
    TARGET_ARCH: armeabi-v7a

arm64-v8a:
  <<: *build
  variables:
    TARGET_ARCH: arm64-v8a

x86:
  <<: *build
  variables:
    TARGET_ARCH: x86
  allow_failure: true

release:
  stage: release
  script:
    - ./.ci/release.sh
  only:
    - master
  artifacts:
    paths:
    - release/
